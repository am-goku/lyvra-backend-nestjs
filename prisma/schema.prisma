generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Product Product[]

  Order Order[]
  Cart  Cart?
}

enum Role {
  USER
  ADMIN
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Float
  imageUrl    String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  createdBy   Int
  user        User        @relation(fields: [createdBy], references: [id])
  categories  Category[]  @relation("ProductCategories")
  OrderItem   OrderItem[]
  CartItem    CartItem[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[] @relation("ProductCategories")
}

model Order {
  id               Int           @id @default(autoincrement())
  userId           Int
  user             User          @relation(fields: [userId], references: [id])
  total            Float
  orderStatus      OrderStatus   @default(PENDING)
  paymentStatus    PaymentStatus @default(PENDING)
  paymentSessionId String?       @unique
  paymentIntentId  String?       // âœ… optional Stripe PaymentIntent ID
  paymentMethod    PaymentMethod @default(COD)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  orderItems       OrderItem[]
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
  RETURNED
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}

enum PaymentMethod {
  STRIPE
  COD
  PAYPAL
  RAZORPAY
  OTHER
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int     @default(1)
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int     @default(1)
  cart      Cart    @relation(fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}
